using Newtonsoft.Json;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace m3_02_attributes_demo
{
    public static class JsonOptInOptOutDemo
    {
        /// <summary>
        /// OptIn, OptOut, and Fields
        /// </summary>
        public static void Show()
        {
            Console.Clear();
            Console.WriteLine("*** Json OptIn & OptOut ***");

            Console.WriteLine("- OptIn");
            AuthorJsonObjectOptIn xavierAuthorOptIn = new AuthorJsonObjectOptIn()
            {
                name = "Xavier Morera",
                courses = new string[] { "Solr", "Spark", "Python" },
                since = DateTime.Now
            };
            string xavierJsonOptIn = JsonConvert.SerializeObject(xavierAuthorOptIn, Formatting.Indented);
            Console.WriteLine(xavierJsonOptIn);

            Console.WriteLine("- OptOut");
            AuthorJsonObjectOptOut xavierAuthorOptOut = new AuthorJsonObjectOptOut()
            {
                name = "Xavier Morera",
                courses = new string[] { "Solr", "Spark", "Python" },
                since = DateTime.Now
            };
            string xavierJsonOptOut = JsonConvert.SerializeObject(xavierAuthorOptOut, Formatting.Indented);
            Console.WriteLine(xavierJsonOptOut);

            Console.WriteLine("- Fields");
            AuthorJsonObjectFields xavierAuthorFields = new AuthorJsonObjectFields()
            {
                name = "Xavier Morera",
                courses = new string[] { "Solr", "Spark", "Python" },
                since = DateTime.Now,
                IsAutoGeneratedProp = "Value for auto generated",
                NotAutoGenerated = "Value for NOT auto generated" 
            };
            string xavierJsonFields = JsonConvert.SerializeObject(xavierAuthorFields, Formatting.Indented);
            Console.WriteLine(xavierJsonFields);
        }
    }

    /// <summary>
    /// OptIn: Include JsonPropertyAttribute or DataMemberAttribute 
    /// </summary>
    [JsonObject(MemberSerialization = MemberSerialization.OptIn)]
    public class AuthorJsonObjectOptIn
    {
        private string privateField;

        [JsonProperty]
        private string privateFieldWithAttribute;

        [JsonProperty]
        public string name { get; set; }

        public string[] courses { get; set; }

        public DateTime since;

        [NonSerialized]
        public bool happy;

        [JsonIgnoreAttribute]
        public object issues { get; set; }

        private string NotAutoGeneratedProperty
        {
            get
            {
                return privateField;
            }
            set
            {
                privateField = value;
            }
        }
    }

    /// <summary>
    /// OptOut: Exclude using JsonIgnoreAttribute or NonSerializedAttribute 
    /// </summary>
    [JsonObject(MemberSerialization = MemberSerialization.OptOut)]
    public class AuthorJsonObjectOptOut
    {
        private string privateField;

        [JsonProperty]
        private string privateFieldWithAttribute;

        [JsonProperty]
        public string name { get; set; }

        public string[] courses { get; set; }

        public DateTime since;

        [NonSerialized]
        public bool happy;

        [JsonIgnoreAttribute]
        public object issues { get; set; }

        private string NotAutoGeneratedProperty
        {
            get
            {
                return privateField;
            }
            set
            {
                privateField = value;
            }
        }
    }

    /// <summary>
    /// Fields
    /// </summary>
    [JsonObject(MemberSerialization = MemberSerialization.Fields)]
    public class AuthorJsonObjectFields
    {
        private string privateField;

        [JsonProperty]
        private string privateFieldWithAttribute;

        [JsonProperty]
        public string name { get; set; }

        public string[] courses { get; set; }

        public DateTime since;

        [NonSerialized]
        public bool happy;

        [JsonIgnoreAttribute]
        public object issues { get; set; }

        private double salary { get; set; }

        public string IsAutoGeneratedProp { get; set; }

        [JsonPropertyAttribute(DefaultValueHandling = DefaultValueHandling.Include)]
        public string NotAutoGenerated
        {
            get
            {
                return privateField;
            }
            set
            {
                privateField = value;
            }
        }

    }

}
